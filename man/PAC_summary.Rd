% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PAC_summary.R
\name{PAC_summary}
\alias{PAC_summary}
\title{Summarizes PAC objects}
\usage{
PAC_summary(
  PAC,
  norm = "counts",
  type = "means",
  pheno_target = NULL,
  rev = FALSE,
  PAC_merge = FALSE
)
}
\arguments{
\item{PAC}{PAC object containing a Pheno dataframe with samples as row names,
a Counts table with raw counts and a normalized list-folder containing
tables with normalized Counts (e.g. rpm).}

\item{norm}{Character indicating what type of data to be used. If 'counts' the raw
counts in Counts will be used (default). Given any other value, the
function will search for the value as a name on a dataframe stored in the
normalized list-folder (created for example by PAC_norm).}

\item{type}{Character indicating what type of summary to be applied to the
data.}

\item{pheno_target}{List with: 1st object being a character vector
of target column in Pheno 2nd object being a character vector of the target
group(s) in the target Pheno column (1st object).}

\item{rev}{Logical whether pairwise comparisions should be reversed
(default=FALSE).}

\item{PAC_merge}{Logical whether simplified annotation vector should
automatically be added to Anno object if a PAC list object were given as
input (default=FALSE)}
}
\value{
A PAC object with a pheno_summary folder containing the summarized
  data in a dataframe. The dataframe will be named according to the
  pheno_target, type and norm input.
}
\description{
\code{PAC_summary} Summarizes data stored in a PAC object.
}
\details{
Given a PAC object this function summarize data in Counts or in the norm
list-folder according to a grouping variable in Pheno.
}
\examples{
load(file="/home/danis31/OneDrive/Programmering/Programmering/Pipelines/Drosophila/Pipeline_3.1/seqpac/dm_test_PAC.Rdata")


PAC_check(PAC_filt) # TRUE

PAC_filt <- PAC_rpm(PAC_filt)

PAC_filt <- PAC_summary(PAC_filt, norm = "rpm", type = "means", pheno_target=list("Method", NULL))
PAC_filt <- PAC_summary(PAC_filt, norm = "rpm", type = "log2FC", pheno_target=list("Method", NULL))
PAC_filt <- PAC_summary(PAC_filt, norm = "rpm", type = "log2FCgrand", pheno_target=list("Method"))
PAC_filt <- PAC_summary(PAC_filt, norm = "rpm", type = "log2FCgrand")
PAC_filt <- PAC_summary(PAC_filt, norm = "rpm", type = "percentgrand")

PAC_test <- PAC_summary(PAC_filt, norm = "rpm", type = "log2FC", pheno_target=list("Index", c("sperm_cells_HC", "sperm_cells_CT")))
PAC_test <- PAC_summary(PAC_test, norm = "rpm", type = "means", pheno_target=list("Index", c("sperm_cells_HC", "sperm_cells_CT")))
PAC_test <- PAC_summary(PAC_test, norm = "rpm", type = "se", pheno_target=list("Index", c("sperm_cells_HC", "sperm_cells_CT")))

PAC_filt <- PAC_summary(PAC_filt, norm = "rpm", type = "means", pheno_target=list("Method"))




}
\seealso{
\url{https://github.com/Danis102} for updates on the current
package.

Other PAC analysis: 
\code{\link{PAC_covplot}()},
\code{\link{PAC_deseq}()},
\code{\link{PAC_filter}()},
\code{\link{PAC_filtsep}()},
\code{\link{PAC_gtf}()},
\code{\link{PAC_jitter}()},
\code{\link{PAC_mapper}()},
\code{\link{PAC_mismap}()},
\code{\link{PAC_nbias}()},
\code{\link{PAC_norm}()},
\code{\link{PAC_pca}()},
\code{\link{PAC_pie}()},
\code{\link{PAC_pirna}()},
\code{\link{PAC_rpm}()},
\code{\link{PAC_saturation}()},
\code{\link{PAC_sizedist}()},
\code{\link{PAC_stackbar}()},
\code{\link{PAC_tRNA}()},
\code{\link{map_rangetype}()}
}
\concept{PAC analysis}
