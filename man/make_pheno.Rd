% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_pheno.R
\name{make_pheno}
\alias{make_pheno}
\title{Make Phenotype File}
\usage{
make_pheno(pheno_input, type = "manual", countTable = NULL,
  progress_report = NULL)
}
\arguments{
\item{pheno_input}{Character vector with the path to a .csv file or a
dataframe with rownames as sample names.}

\item{type}{Character indicating what type to file to expect. If
\emph{type="basespace"} the function will attempt to read nd join
information from 'SampleSheetUsed.csv' and 'Samples_stat.txt' in
pheno_input that have been downloaded from Illumina Basespace. If
type="manual", the function will attempt to read a file named 'pheno.csv',
in which the first column has been named 'Sample_ID' containing the exact
sample names matching basenames of the fastq sample files.}

\item{countTable}{Data.frame object with the same column names as in
Sample_ID column of the .csv file.}

\item{progress_report}{Data.frame object with progress report.}
}
\value{
data.frame
}
\description{
\code{make_pheno} generates a Pheno data.frame object containing additional
metadata for unique samples.
}
\details{
Given the path to a directory with a single csv file, the function will read
the file. If provided with a countTable (see \code{make_countTable}), it will
attempt to organize the the row names according to the column names in the
countTable.

The function was specifically written for Illumina SampleSheetUsed.csv files
downloaded from the BaseSpace server using the basemount software. It will,
however, be compatible with any comma seperated text file with any of its
first lines containing a header with the first column named 'Sample_ID'.

The function will also attempt to read a 'Samples_stat.txt' (tab seperate
file) file also downloaded from Illumina BaseSpace. This file will add
original number of reads (past filter) generated in the sequencing. If
provided with a Sports progress_report object (see \code{progress_report} the
script will attempt to add this data to the Pheno data.frame.
}
\examples{

### Sports input
  path_sport <- "/data/Data_analysis/Projects/Pigs/Specific_projects/SRA_download/SRP135969_Sperm_Exosomes_Hemicastration/Processed_Pipeline31_05-03-20"

sports_lst <- import_sports("/data/Data_analysis/Projects/Pigs/Specific_projects/SRA_download/SRP135969_Sperm_Exosomes_Hemicastration/Processed_Pipeline31_05-03-20", threads=8)

anno <- make_anno(sports_lst = sports_lst, threads = 10, filt = 2, stat = TRUE)
counts <- make_counts(sports_lst = sports_lst, anno = anno, threads = 10)
report <- progress_report(path_sport)

pheno <- make_pheno(<your_path_to_sports_output_directory>)

pheno_input <- "/data/Data_analysis/Projects/Pigs/Specific_projects/SRA_download/SRP135969_Sperm_Exosomes_Hemicastration/summary"
pheno <- make_pheno(pheno_path, countTable=counts, progress_report=report, type="manual")

### Simple manual

}
\seealso{
\url{https://github.com/junchaoshi/sports1.0} for download and
  documentation about running Sports. \url{https://github.com/Danis102} for
  updates on the current package.

Other PAC generation: \code{\link{import_sports}},
  \code{\link{make_PAC}}, \code{\link{make_anno}},
  \code{\link{make_counts2}}, \code{\link{make_counts}},
  \code{\link{progress_report}}
}
\concept{PAC generation}
