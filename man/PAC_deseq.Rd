% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PAC_deseq.R
\name{PAC_deseq}
\alias{PAC_deseq}
\title{A wrapper to DESeq2 that apply differential expression analysis on a PAC object}
\usage{
PAC_deseq(
  PAC,
  model,
  deseq_norm = FALSE,
  histogram = TRUE,
  threads = 1,
  pheno_target = NULL,
  anno_target = NULL
)
}
\arguments{
\item{PAC}{PAC object containing a Pheno data.frame with samples as row
names, an Anno data.frame with sequences as row names and a Counts table with
raw counts. The Counts table must have the sample names as column names and
sequences as row names.}

\item{model}{Character vector describing the statistical model based on column names in Pheno.}

\item{deseq_norm}{Logical whether to return deseq normalized values or not (default=TRUE).}

\item{histogram}{Logical whether to return a p-value destributions as a histogram (default=TRUE).}

\item{threads}{Integer number of threads to run in parallel.}

\item{pheno_target}{(optional) List with: 
1st object being a character indicating the main target column in
Pheno.
2nd object being a character vector of the target group(s) in the
target Pheno column (1st object).

Note: In PAC_deseq pheno_target controls the main comparative factor
category. If for instance a target column named "groups" in
PAC$Pheno contains "control" and "treatment" categories, setting
pheno_target=list("groups", c("treatment", "controls") ensures that
"treatment" is presented 1st in the factor levels, making for
example log2FC appear as "treatment vs control". As default,
pheno_target=NULL will result in the factor levels being
automatically sorted in ascending order, which in the example above
would result in control vs treatment log2FC.}

\item{anno_target}{(optional) List with: 
1st object being a character vector of target column in Anno 
2nd object being a character vector of the target type/biotypes(s) in the target Anno column (1st object).
(default=NULL)}
}
\value{
A list of objects: 
              1st object - result table 
              2nd object - p-value histogram (optional)
}
\description{
\code{PAC_deseq} DESeq2 analysis on PAC_object.
}
\details{
Given a PAC object this function will apply a differential expression analysis using DESeq2.
}
\examples{

library(seqpac)
load(system.file("extdata", "drosophila_sRNA_pac_anno.Rdata", package = "seqpac", mustWork = TRUE))

PAC <- PAC_norm(pac, type="rpm")
pheno_target <- list("replicate", c("test3", "test1"))
pheno_target <- list("type", c("Sperm", "Ovaries"))
pheno_target <- list("type", c("Ovaries", "Sperm"))

model=~replicate
model=~replicate+type  
    
    
pheno_target <- list("replicate")

test <- PAC_deseq(PAC, model=model, deseq_norm=TRUE, histogram=TRUE, threads=4, pheno_target=pheno_target, anno_target=NULL)

}
\seealso{
\url{https://github.com/Danis102} for updates on the current
  package.

Other PAC analysis: 
\code{\link{PAC_covplot}()},
\code{\link{PAC_filter}()},
\code{\link{PAC_filtsep}()},
\code{\link{PAC_gtf}()},
\code{\link{PAC_jitter}()},
\code{\link{PAC_mapper}()},
\code{\link{PAC_mismap}()},
\code{\link{PAC_nbias}()},
\code{\link{PAC_norm}()},
\code{\link{PAC_pca}()},
\code{\link{PAC_pie}()},
\code{\link{PAC_rpm}()},
\code{\link{PAC_saturation}()},
\code{\link{PAC_sizedist}()},
\code{\link{PAC_stackbar}()},
\code{\link{PAC_summary}()},
\code{\link{PAC_tRNA}()},
\code{\link{map_rangetype}()}
}
\concept{PAC analysis}
