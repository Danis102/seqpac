% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PAC_deseq.R
\name{PAC_deseq}
\alias{PAC_deseq}
\title{A wrapper to DESeq2 that apply differential expression analysis on a PAC object}
\usage{
PAC_deseq(PAC, model, main_factor = NULL, norm = TRUE,
  histogram = TRUE, threads = 1, pheno_target = NULL,
  anno_target = NULL)
}
\arguments{
\item{PAC}{PAC object containing a Pheno data.frame with samples as row
names, an Anno data.frame with sequences as row names and a Counts table with
raw counts. The Counts table must have the sample names as column names and
sequences as row names.}

\item{model}{Character vector describing the statistical model based on column names in Pheno.}

\item{main_factor}{Character vector (default = first term in model).}

\item{norm}{Logical whether to return deseq normalized values or not (default=TRUE).}

\item{histogram}{Logical whether to return a p-value destributions as a histogram (default=TRUE).}

\item{threads}{Integer number of threads to run in parallel.}

\item{pheno_target}{(optional) List with: 
1st object being a character vector of target column in Pheno 
2nd object being a character vector of the target group(s) in the target Pheno column (1st object).
(default=NULL)}

\item{anno_target}{(optional) List with: 
1st object being a character vector of target column in Anno 
2nd object being a character vector of the target type/biotypes(s) in the target Anno column (1st object).
(default=NULL)}
}
\value{
A list of objects: 
              1st object - result table 
              2nd object - p-value histogram (optional)
}
\description{
\code{PAC_deseq} DESeq2 analysis on PAC_object.
}
\details{
Given a PAC object this function will apply a differential expression analysis using DESeq2.
}
\examples{

load(file="/data/Data_analysis/Projects/Pigs/Specific_projects/SRA_download/SRP135969_Sperm_Exosomes_Hemicastration/Processed_Pipeline3_02-01-20/R_files/PAC_master_reanno.Rdata")
PAC <- PAC_rpm(PAC_master_reanno)
PAC$Pheno$Hemi_cast <- ifelse(grepl("HC", PAC$Pheno$Index), "Hemi", "Cont") 
PAC$Pheno$Type <- ifelse(grepl("sperm_cells", PAC$Pheno$Index), "Sperm", "Plasma")
pheno_target <- list("Type", "Sperm")
PAC  <- PAC_filter(PAC, size = c(16, 45), threshold = 1, coverage = 100, type = "rpm", stat = TRUE, pheno_target = pheno_target, anno_target = NULL)
pheno_target <- list("Hemi_cast", c("Hemi", "Cont"))  

test <- PAC_deseq(PAC, model=~Hemi_cast, main_factor="Hemi_cast", norm=TRUE, histogram=TRUE, threads=4, pheno_target=NULL, anno_target=NULL)

}
\seealso{
\url{https://github.com/Danis102} for updates on the current
  package.

Other PAC analysis: \code{\link{PAC_covplot}},
  \code{\link{PAC_filter}}, \code{\link{PAC_filtsep}},
  \code{\link{PAC_jitter}}, \code{\link{PAC_mapper}},
  \code{\link{PAC_mismap}}, \code{\link{PAC_nbias}},
  \code{\link{PAC_pca}}, \code{\link{PAC_pie}},
  \code{\link{PAC_rpm}}, \code{\link{PAC_saturation}},
  \code{\link{PAC_sizedist}}, \code{\link{PAC_stackbar}},
  \code{\link{PAC_summary}}, \code{\link{PAC_trna}}
}
\concept{PAC analysis}
