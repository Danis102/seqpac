% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PAC_nbias.R
\name{PAC_nbias}
\alias{PAC_nbias}
\title{Generates a nucleotide bias analysis from sequences and counts in a PAC object}
\usage{
PAC_nbias(PAC, position = 1, range = c(min(PAC$Anno$Length),
  max(PAC$Anno$Length)), anno_taget = NULL, pheno_target = "Sample_ID")
}
\arguments{
\item{PAC}{PAC-list object containing an Anno data.frame with sequences as
row names and a count table with raw counts.}

\item{position}{Integer giving the nucleotide postion from 3' to 5' position (default=1).}

\item{range}{Integer vector giving the range  in sequence lengths (default=c(min, max)).}

\item{anno_taget}{List with: 
1st object being character vector of target column(s) in Anno, 
2nd object being a character vector of the target biotypes(s) in the target column (1st object).
(default=NULL)}

\item{pheno_target}{List with: 
1st object being character vector of target column(s) in Pheno, 
2nd object being a character vector of the target group(s) in the target column (1st object).
(default=NULL)}

\item{mismatch}{Integer setting the number of mismatches to allow for biotype annotation (default=0).}

\item{threads}{Integer setting the number of virtual cores to be used (default=1).}
}
\value{
A list of objects: 
              1st object (Histograms::Samples): Individual histograms showing the nucleotide ratios per sample over the specified range.   
              2nd object (Data::Samples): Data used to generate the plots.
              3rd object (Stacked_bars::Groups): Stacked bars showing the mean ratios of each nucleotide per group over the specified range.
              4th object (Error_bars::Groups): Error bar plots with mean ratio of each nucleotide per group over the specified range.
}
\description{
\code{PAC_nbias} analyses nucleotide bias.
}
\details{
Given a PAC object the function will attempt to extract the ratios of
specific nucleotides at a given position in sequences in the Anno data.frame
in relation to the sequence counts in Counts.
}
\examples{

library(seqpac)
path="/data/Data_analysis/Projects/Drosophila/Other/IOR/Joint_analysis/R_analysis/"
load(file=paste0(path, "PAC_all.Rdata"))

### First apply shallow counts filter, and then generate rpm on which rpm filter is applied.  
PAC_filt <- PAC_filter(PAC_all, size=c(16,45), threshold=10, coverage=5, type="counts", stat=FALSE, pheno_target=NULL, anno_target=NULL)
PAC_filt <- PAC_rpm(PAC_filt)
PAC_filt <- PAC_filter(PAC_filt, size=c(16,45), threshold=10, coverage=5, type="rpm", stat=FALSE, pheno_target=NULL, anno_target=NULL)

hierachy <- list( Mt_rRNA= "12S|16S|Mt_rRNA",
                 rRNA="5S|5.8S|18S|28S|S45|Ensembl_rRNA|rRNA_Other",
                 Mt_tRNA= "tRNA_mt-tRNA",
                 tRNA="Ensembl_tRNA|tRNA_nuc-tRNA",
                 miRNA="^miRNA|Ensembl_miRNA|Ensembl_pre_miRNA",
                 piRNA="piRNA")

PAC_filt <- simplify_reanno(PAC_filt, hierachy=hierachy, mismatches=0, bio_name="Biotypes_1", PAC_merge = TRUE)


nbias_result <- PAC_nbias(PAC=PAC_filt, position=1, range= c(min(PAC$Anno$Length), max(PAC$Anno$Length)), pheno_target="Sample_ID")   

  
nbias_result <- PAC_nbias(PAC=PAC_reanno, position=1, range= c(min(PAC$Anno$Length), max(PAC$Anno$Length)), biotype="rRNA", mismatch=0, pheno_target="Sample_ID")    
nbias_result <- PAC_nbias(PAC=PAC_filt, position=1, range= c(min(PAC$Anno$Length), max(PAC$Anno$Length)), biotype="rRNA", mismatch=0, pheno_target="Sample_ID")    
cowplot::plot_grid(plotlist=nbias_result[[1]], nrow = 5, ncol = 5)

}
\seealso{
\url{https://github.com/Danis102} for updates on the current
  package.

Other PAC analysis: \code{\link{PAC_covplot}},
  \code{\link{PAC_deseq}}, \code{\link{PAC_filter}},
  \code{\link{PAC_jitter}}, \code{\link{PAC_mapper}},
  \code{\link{PAC_pca}}, \code{\link{PAC_pie}},
  \code{\link{PAC_rpm}}, \code{\link{PAC_saturation}},
  \code{\link{PAC_stackbar}}, \code{\link{PAC_summary}}
}
\concept{PAC analysis}
