% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PAC_stackbar.R
\name{PAC_stackbar}
\alias{PAC_stackbar}
\title{Plot stackbars from PAC}
\usage{
PAC_stackbar(PAC, anno_target = list("Biotypes", NULL),
  pheno_target = NULL, colvec = NULL, width = 1, no_anno = TRUE)
}
\arguments{
\item{PAC}{PAC-list object.}

\item{anno_target}{List with: 
1st object being character vector of target column(s) in Anno, 
2nd object being a character vector of the target
biotype(s) in the target column (1st object).
Important, the 2nd object is order sensitive,
meaning that categories will appear in the same
order in the stacked bargraph. (default=NULL)}

\item{pheno_target}{List with: 
1st object being character vector of target column(s) in Pheno, 
2nd object being a character vector of the target
group(s) in the target column (1st object).
Important, the 2nd object is order sensitive,
meaning that categories will appear in the same
order in the stacked bargraph. (default=NULL)}
}
\value{
A stacked bar plot generated by ggplot2
}
\description{
\code{PAC_stackbar} analyses nucleotide bias.
}
\details{
Given a PAC object the function will attempt to extract group information
from Pheno, biotype information from Anno, and summaries this over the data
in Counts or norm.
}
\examples{

### Load data ###
path="/data/Data_analysis/Projects/Drosophila/Other/IOR/Jan_IOR_200130/R_analysis_full/"
load(file=paste0(path, "PAC_all.Rdata"))

### Generate rpm values ###
PAC_all <- PAC_rpm(PAC_all)

### Filter PAC file ###
PAC_filt <- PAC_filter(PAC_all, size = c(16, 45), threshold = 10, coverage = 50, type = "rpm", stat = TRUE, pheno_target = list("Method", c("IOR1_proto", "IOR1_tgirt")), anno_target = NULL)
PAC_filt <- PAC_filter(PAC_all, size = c(16, 45), threshold = 10, coverage = 10, type = "rpm", stat = TRUE, pheno_target = NULL, anno_target = NULL)

### Generate hierachy of simplified biotypes ###
unique(do.call("c", strsplit(as.character(PAC_filt$Anno$mis0), ";|\\\\|")))

hierachy = list( rRNA="rRNA",
                 Mt_tRNA= "tRNA_mt-tRNA",
                 tRNA="Ensembl_tRNA|tRNA_nuc-tRNA",
                 miRNA="^miRNA|Ensembl_miRNA",
                 pre_miRNA="Ensembl_pre_miRNA",
                 snoRNA="snoRNA",
                 snRNA="snRNA",
                 lincRNA="lincRNA",
                 piRNA="piRNA")
                 
PAC_filt <- simplify_reanno(PAC_filt, hierachy=hierachy, mismatches=0, bio_name="Biotypes", PAC_merge=TRUE)

### Plot stacked bargraphs
table(PAC_filt$Anno$Biotypes)
unique(PAC_filt$Anno$Biotypes)
biotypes_ord <- c("rRNA", "tRNA", "Mt_tRNA", "miRNA", "piRNA", "snoRNA", "snRNA", "lincRNA", "no_anno")


PAC_filt$Pheno$Method_Tag <- gsub("__", "", paste(PAC_filt$Pheno$Method, PAC_filt$Pheno$Tag, sep="_"))
table(PAC_filt$Pheno$Method_Tag)
unique(PAC_filt$Pheno$Method_Tag)
method_ord <- c("R2_R2R","IOR1_proto","IOR1_tgirt","IOR2_Long_proto_Tag","IOR2_Short_proto_Tag", "IOR2_Long_proto_No_Tag", "IOR2_Short_proto_No_Tag")


plot  <- PAC_stackbar(PAC_filt, anno_target = list("Biotypes", biotypes_ord), pheno_target = list("Method_Tag", method_ord), width=1, no_anno=TRUE)  


table(PAC_IOR1$Anno$Biotypes_simpl)


}
\seealso{
\url{https://github.com/Danis102} for updates on the current
  package.

Other PAC analysis: \code{\link{PAC_covplot}},
  \code{\link{PAC_deseq}}, \code{\link{PAC_filter}},
  \code{\link{PAC_jitter}}, \code{\link{PAC_mapper}},
  \code{\link{PAC_nbias}}, \code{\link{PAC_pca}},
  \code{\link{PAC_pie}}, \code{\link{PAC_rpm}},
  \code{\link{PAC_saturation}}, \code{\link{PAC_summary}}
}
\concept{PAC analysis}
