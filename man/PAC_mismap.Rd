% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PAC_mismap.R
\name{PAC_mismap}
\alias{PAC_mismap}
\title{Plot sequence covarage over a reference}
\usage{
PAC_mismap(
  PAC,
  map,
  type = "percent",
  summary_target = NULL,
  map_target = NULL,
  threads = 1,
  par_type = "PSOCK",
  xseq = TRUE,
  colors = NULL
)
}
\arguments{
\item{PAC}{PAC-list object.}

\item{map}{map object generated by \code{PAC_mapper}.}

\item{type}{Character whether plots should be generated using "rpm" or as
"percent" (default="percent").}

\item{summary_target}{List with 2 character vectors: 1st object: Character
indicating the name of the target PAC summary object which should be used
as input data for the plots. If left empty the 1st summary object will be
used. 2nd object: Character vector indicating the names of the columns in
the summary object from which individual graphs should be plotted. If left
empty all summary columns are plotted in the same graph. Summaries are
generated by the PAC_summary function or customly generated by the user and
stored in the summary 'folder' of a PAC object.}

\item{map_target}{(optional) Character vector. Imporant: This is similar to
an anno_target, but instead extracts target references in the PAC_mapping
object. Should contain search terms that can find unique strings in the
reference names . The search terms are parse to grepl("<search terms>,
names(<PAC_mapping object>)). (default=NULL)}

\item{threads}{Integer indicating number of parallel processes that should be
registered and parsed to doeach (default=1).}

\item{par_type}{Character indicating if "PSOCK" or "FORK" should be parsed to
parallel::makeCluster (default="PSOCK"). Windows only supports "PSOCK".}

\item{xseq}{Logical indicating whether the nucleotides should be plotted on
the x-axis. Plotting long references with xseq=FALSE will increase script
performance. (default=TRUE).}

\item{colors}{Character vector of length=5, indicating the rgb colors to be
parsed to ggplot2 for plotting the stacked bars. Leave as NULL will
generate function default colors (default = NULL).}
}
\value{
Plot list with plots generated by ggplot2
}
\description{
\code{PAC_covplot} Plotting sequences in a PAC object using an PAC mapping
object.
}
\details{
Given a PAC object and a PAC_map object generated by \emph{PAC_mapping} this
function will attempt to plot the sequence coverage over long references.
}
\examples{

\dontrun{
### Load data ###
library(seqpac)
load(system.file("extdata", "drosophila_sRNA_pac.Rdata", 
                  package = "seqpac", mustWork = TRUE))

pac <- PAC_norm(pac_master, norm="cpm")
pac <- PAC_summary(pac, norm = "cpm", type = "means", 
                         pheno_target=list("stage"))

ref_path <- "/data/Data_analysis/Genomes/Drosophila/dm6/tRNA/tRNA.fa"
full <- Biostrings::readDNAStringSet(ref_path)
ref <- full[grepl("Glu-CTC-3-1|Lys-CTT-1-1 ", names(full))]

map_refs <- PAC_mapper(pac, ref=ref, threads=8, mismatches=3)

plot_lst <- PAC_mismap(PAC=PAC_filt, map=map_refs, type="percent", 
                       summary_target=list("means_[Method]"), 
                       map_target=NULL,  xseq=TRUE, colors=NULL, 
                       threads=8, par_type="PSOCK")

cowplot::plot_grid(plot_lst[[1]][[1]][[1]], plot_lst[[1]][[1]][[2]], 
                   plot_lst[[1]][[2]][[1]], plot_lst[[1]][[2]][[2]],
                   labels="auto", nrow = 4, ncol = 1)
                   
plot_lst$Data

       
### Add coverage plots ###                  

cov_plots <- PAC_covplot(PAC=PAC_filt, map=map_refs, 
                         summary_target=list("means_[Method]"), 
                         xseq=TRUE, style="line", 
                         colour=c("red", "black"))                                   
 
cowplot::plot_grid(plot_lst[[1]][[1]][[1]], 
                   plot_lst[[1]][[1]][[2]], 
                   cov_plots[[1]],
                   labels="auto", nrow = 3, ncol = 1)

cowplot::plot_grid(plot_lst[[1]][[2]][[1]], 
                   plot_lst[[1]][[2]][[2]], 
                   cov_plots[[2]],
                   labels="auto", nrow = 3, ncol = 1)

 }    
}
\seealso{
\url{https://github.com/Danis102} for updates on the current
  package.

Other PAC analysis: 
\code{\link{PAC_covplot}()},
\code{\link{PAC_deseq}()},
\code{\link{PAC_filter}()},
\code{\link{PAC_filtsep}()},
\code{\link{PAC_gtf}()},
\code{\link{PAC_jitter}()},
\code{\link{PAC_mapper}()},
\code{\link{PAC_nbias}()},
\code{\link{PAC_norm}()},
\code{\link{PAC_pca}()},
\code{\link{PAC_pie}()},
\code{\link{PAC_saturation}()},
\code{\link{PAC_sizedist}()},
\code{\link{PAC_stackbar}()},
\code{\link{PAC_summary}()},
\code{\link{PAC_trna}()},
\code{\link{as.PAC}()},
\code{\link{filtsep_bin}()},
\code{\link{map_rangetype}()},
\code{\link{tRNA_class}()}
}
\concept{PAC analysis}
