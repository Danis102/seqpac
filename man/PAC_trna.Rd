% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PAC_trna.R
\name{PAC_trna}
\alias{PAC_trna}
\title{Plot sequence covarage over a reference}
\usage{
PAC_trna(PAC, map, ss = NULL, summary_target = NULL,
  map_target = NULL, threads = 1, par_type = "PSOCK",
  col_vect = NULL)
}
\arguments{
\item{PAC}{PAC-list object.}

\item{summary_target}{List with 2 character vectors: 
1st object: Character indicating the name of the target PAC summary object
which should be used as input data for the plots. If left empty the 1st
summary object will be used.
2nd object: Character vector indicating the names of the columns in the
summary object from which individual graphs should be plotted. If left
empty all summary columns are plotted in the same graph.
Summaries are generated by the PAC_summary function or customly generated
by the user and stored in the summary 'folder' of a PAC object.}

\item{map_target}{(optional) Character vector. Imporant: This is similar to
an anno_target, but instead extracts target references in the PAC_mapping
object. Should contain search terms that can find unique strings in the
reference names. The search terms are parse to grepl("<search terms>,
names(<PAC_mapping object>)). (default=NULL)}

\item{PAC_map}{PAC_map object generated by \emph{PAC_mapping}.}

\item{xseq}{Logical indicating whether the nucleotides should be plotted on
the x-axis. Plotting long references with xseq=FALSE will increase
script performance. (default=TRUE).}

\item{colour}{Character vector indicating the rgb colors to be parsed to
ggplot2 for plotting the covarage lines  (default = c("black", "red",
"grey", "blue"))}
}
\value{
Plot list with plots generated by ggplot2
}
\description{
\code{PAC_covplot} Plotting sequences in a PAC object using an PAC mapping object.
}
\details{
Given a PAC object and a PAC_map object generated by \emph{PAC_mapping}
this function will attempt to plot the sequence coverage over long
references.
}
\examples{

load(file="/home/danis31/OneDrive/Programmering/Programmering/Pipelines/Drosophila/Pipeline_3.1/seqpac/dm_test_PAC.Rdata")

#PAC_filt <- PAC_filter(PAC_all, threshold=5, coverage=4, type="counts", stat=FALSE, pheno_target=NULL, anno_target=NULL)
PAC_filt <- PAC_rpm(PAC_filt)
PAC_filt <- PAC_summary(PAC_filt, norm = "rpm", type = "means", pheno_target=list("Method"))
PAC_check(PAC_filt)

ref_path <- "/data/Data_analysis/Genomes/Drosophila/dm6/tRNA/tRNA.fa"
full <- Biostrings::readDNAStringSet(ref_path)
ref <- full[grepl("Glu-CTC-3-1|Lys-CTT-1-1 |Arg-CCT-1-1", names(full))]

map_refs <- PAC_mapper(PAC_filt, ref=ref, threads=12, mismatches=0)


ss_path <- "/data/Data_analysis/Genomes/Drosophila/dm6/tRNA/Finished_tRNA_Drosophila_loop_anno.ss"


plot_lst <- PAC_mismap(PAC=PAC_filt, map=map_refs, ss=ss_path, summary_target=list("means_[Method]"), map_target=NULL,  xseq=TRUE, col_vect=NULL, threads=8, par_type="PSOCK")


cowplot::plot_grid(plot_lst[[1]][[1]][[1]], plot_lst[[1]][[1]][[2]], 
                   plot_lst[[1]][[2]][[1]], plot_lst[[1]][[2]][[2]],
                   labels="auto", nrow = 4, ncol = 1)
                   
plot_lst$Data


PAC=PAC_filt
map=map_refs
ss=NULL
summary_target=NULL
map_target=NULL 
threads=8
par_type="PSOCK" 
col_vect=NULL


}
\seealso{
\url{https://github.com/Danis102} for updates on the current
  package.

Other PAC analysis: \code{\link{PAC_covplot}},
  \code{\link{PAC_deseq}}, \code{\link{PAC_filter}},
  \code{\link{PAC_filtsep}}, \code{\link{PAC_jitter}},
  \code{\link{PAC_mapper}}, \code{\link{PAC_mismap}},
  \code{\link{PAC_nbias}}, \code{\link{PAC_pca}},
  \code{\link{PAC_pie}}, \code{\link{PAC_rpm}},
  \code{\link{PAC_saturation}}, \code{\link{PAC_sizedist}},
  \code{\link{PAC_stackbar}}, \code{\link{PAC_summary}}
}
\concept{PAC analysis}
